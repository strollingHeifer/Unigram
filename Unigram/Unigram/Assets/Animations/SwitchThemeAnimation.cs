//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           6.1.0+gd30fc5741e
//       
//       Command:
//           LottieGen -Language CSharp -InputFile ThemeSwitchedAnimation.json
//       
//       Input file:
//           ThemeSwitchedAnimation.json (23241 bytes created 11:05+02:00 set 9 2020)
//       
//       Invoked on:
//           DESKTOP-K7M74EJ @ 14:56+02:00 set 11 2020
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ___________________________________________________________
// |       Object stats       | UAP v11 count | UAP v7 count |
// |__________________________|_______________|______________|
// | All CompositionObjects   |           222 |          214 |
// |--------------------------+---------------+--------------|
// | Animators                |            84 |           82 |
// | Animated brushes         |             - |            - |
// | Animated gradient stops  |             - |            - |
// | ExpressionAnimations     |            18 |           18 |
// | PathKeyFrameAnimations   |             1 |            - |
// |--------------------------+---------------+--------------|
// | ContainerVisuals         |             3 |            3 |
// | ShapeVisuals             |             2 |            2 |
// |--------------------------+---------------+--------------|
// | ContainerShapes          |             4 |            4 |
// | CompositionSpriteShapes  |            11 |           11 |
// |--------------------------+---------------+--------------|
// | Brushes                  |             1 |            1 |
// | Gradient stops           |             - |            - |
// | CompositionVisualSurface |             - |            - |
// -----------------------------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Numerics;
using Windows.UI;
using Windows.UI.Composition;

namespace Unigram.Assets.Animations
{
    // Name:        ThemeSwitchedAnimation Lottie
    // Frame rate:  60 fps
    // Frame count: 48
    // Duration:    800,0 mS
    sealed class SwitchThemeAnimation : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
    {
        // Animation duration: 0,800 seconds.
        internal const long c_durationTicks = 8000000;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            if (AnimatedVisual_UAPv11.IsRuntimeCompatible())
            {
                return
                    new AnimatedVisual_UAPv11(
                        compositor
                        );
            }

            if (AnimatedVisual_UAPv7.IsRuntimeCompatible())
            {
                return
                    new AnimatedVisual_UAPv7(
                        compositor
                        );
            }

            return null;
        }

        sealed class AnimatedVisual_UAPv11 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 8000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _colorBrush_White;
            CompositionPath _path;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            ExpressionAnimation _rootProgress;
            ExpressionAnimation _rootProgressRemapped;
            ScalarKeyFrameAnimation _tEndScalarAnimation_0p01_to_0p18;
            ScalarKeyFrameAnimation _trimOffsetScalarAnimation_0_to_0p478;
            ScalarKeyFrameAnimation _tStartScalarAnimation_0_to_0p3;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation(float initialProgress, bool initialValue)
            {
                var result = _c.CreateBooleanKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue);
                return result;
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector3KeyFrameAnimation CreateVector3KeyFrameAnimation(float initialProgress, Vector3 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector3KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // PreComp layer: Sunny
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation()
            {
                var result = CreateBooleanKeyFrameAnimation(0.5625F, true);
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - Layer: Path 7
            // - - ShapeGroup: Path Scale:4,4
            // - Path 1.PathGeometry
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2F, 0F));
                    builder.AddCubicBezier(new Vector2(2F, 0.100000001F), new Vector2(1.91999996F, 0.180000007F), new Vector2(1.82000005F, 0.180000007F));
                    builder.AddCubicBezier(new Vector2(0.920000017F, 0.180000007F), new Vector2(0.180000007F, 0.920000017F), new Vector2(0.180000007F, 1.82000005F));
                    builder.AddCubicBezier(new Vector2(0.180000007F, 1.91999996F), new Vector2(0.100000001F, 2F), new Vector2(0F, 2F));
                    builder.AddCubicBezier(new Vector2(-0.100000001F, 2F), new Vector2(-0.180000007F, 1.91999996F), new Vector2(-0.180000007F, 1.82000005F));
                    builder.AddCubicBezier(new Vector2(-0.180000007F, 0.920000017F), new Vector2(-0.920000017F, 0.180000007F), new Vector2(-1.82000005F, 0.180000007F));
                    builder.AddCubicBezier(new Vector2(-1.91999996F, 0.180000007F), new Vector2(-2F, 0.100000001F), new Vector2(-2F, 0F));
                    builder.AddCubicBezier(new Vector2(-2F, -0.100000001F), new Vector2(-1.91999996F, -0.180000007F), new Vector2(-1.82000005F, -0.180000007F));
                    builder.AddCubicBezier(new Vector2(-0.920000017F, -0.180000007F), new Vector2(-0.180000007F, -0.920000017F), new Vector2(-0.180000007F, -1.82000005F));
                    builder.AddCubicBezier(new Vector2(-0.180000007F, -1.91999996F), new Vector2(-0.100000001F, -2F), new Vector2(0F, -2F));
                    builder.AddCubicBezier(new Vector2(0.100000001F, -2F), new Vector2(0.180000007F, -1.91999996F), new Vector2(0.180000007F, -1.82000005F));
                    builder.AddCubicBezier(new Vector2(0.180000007F, -0.920000017F), new Vector2(0.920000017F, -0.180000007F), new Vector2(1.82000005F, -0.180000007F));
                    builder.AddCubicBezier(new Vector2(1.91999996F, -0.180000007F), new Vector2(2F, -0.100000001F), new Vector2(2F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - Layer: Path 7
            // - - ShapeGroup: Path Scale:4,4
            // - Path 1.PathGeometry
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(1.5F, 0F));
                    builder.AddCubicBezier(new Vector2(1.5F, 0.0799999982F), new Vector2(1.44000006F, 0.140000001F), new Vector2(1.36000001F, 0.140000001F));
                    builder.AddCubicBezier(new Vector2(0.689999998F, 0.140000001F), new Vector2(0.140000001F, 0.689999998F), new Vector2(0.140000001F, 1.36000001F));
                    builder.AddCubicBezier(new Vector2(0.140000001F, 1.44000006F), new Vector2(0.0799999982F, 1.5F), new Vector2(0F, 1.5F));
                    builder.AddCubicBezier(new Vector2(-0.0700000003F, 1.5F), new Vector2(-0.140000001F, 1.44000006F), new Vector2(-0.140000001F, 1.36000001F));
                    builder.AddCubicBezier(new Vector2(-0.140000001F, 0.689999998F), new Vector2(-0.689999998F, 0.140000001F), new Vector2(-1.36000001F, 0.140000001F));
                    builder.AddCubicBezier(new Vector2(-1.44000006F, 0.140000001F), new Vector2(-1.5F, 0.0799999982F), new Vector2(-1.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-1.5F, -0.0799999982F), new Vector2(-1.44000006F, -0.140000001F), new Vector2(-1.36000001F, -0.140000001F));
                    builder.AddCubicBezier(new Vector2(-0.689999998F, -0.140000001F), new Vector2(-0.140000001F, -0.689999998F), new Vector2(-0.140000001F, -1.36000001F));
                    builder.AddCubicBezier(new Vector2(-0.140000001F, -1.44000006F), new Vector2(-0.0700000003F, -1.5F), new Vector2(0F, -1.5F));
                    builder.AddCubicBezier(new Vector2(0.0799999982F, -1.5F), new Vector2(0.140000001F, -1.44000006F), new Vector2(0.140000001F, -1.36000001F));
                    builder.AddCubicBezier(new Vector2(0.140000001F, -0.689999998F), new Vector2(0.689999998F, -0.140000001F), new Vector2(1.36000001F, -0.140000001F));
                    builder.AddCubicBezier(new Vector2(1.44000006F, -0.140000001F), new Vector2(1.5F, -0.0799999982F), new Vector2(1.5F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - ShapeGroup: Path Scale:4,4, Offset:<-1. -1>
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.57299995F, -8.19699955F));
                    builder.AddCubicBezier(new Vector2(6.60300016F, -6.80700016F), new Vector2(8.53299999F, -4.2670002F), new Vector2(8.53299999F, -0.736999989F));
                    builder.AddCubicBezier(new Vector2(8.53299999F, 4.24300003F), new Vector2(4.50299978F, 8.26299953F), new Vector2(-0.467000008F, 8.26299953F));
                    builder.AddCubicBezier(new Vector2(-4.02699995F, 8.26299953F), new Vector2(-7.00699997F, 6.16300011F), new Vector2(-8.43700027F, 3.44300008F));
                    builder.AddCubicBezier(new Vector2(-8.72700024F, 2.87299991F), new Vector2(-8.34700012F, 2.48300004F), new Vector2(-7.8670001F, 2.69300008F));
                    builder.AddCubicBezier(new Vector2(-6.70699978F, 3.18300009F), new Vector2(-2.51699996F, 4.45300007F), new Vector2(1.30299997F, 0.97299999F));
                    builder.AddCubicBezier(new Vector2(5.12300014F, -2.50699997F), new Vector2(3.90300012F, -7.34700012F), new Vector2(3.90300012F, -7.77699995F));
                    builder.AddCubicBezier(new Vector2(3.90300012F, -8.20699978F), new Vector2(4.30299997F, -8.37699986F), new Vector2(4.57299995F, -8.19699955F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - ShapeGroup: Path Scale:4,4, Offset:<-1. -1>
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(5.03399992F, -7.97100019F));
                    builder.AddCubicBezier(new Vector2(6.53399992F, -6.8210001F), new Vector2(8.5340004F, -4.37099981F), new Vector2(8.5340004F, -0.841000021F));
                    builder.AddCubicBezier(new Vector2(8.5340004F, 4.12900019F), new Vector2(4.50400019F, 8.1590004F), new Vector2(-0.465999991F, 8.1590004F));
                    builder.AddCubicBezier(new Vector2(-4.02600002F, 8.1590004F), new Vector2(-7.00600004F, 6.05900002F), new Vector2(-8.43599987F, 3.33899999F));
                    builder.AddCubicBezier(new Vector2(-8.73600006F, 2.77900004F), new Vector2(-8.23999977F, 2.08200002F), new Vector2(-7.86600018F, 2.58899999F));
                    builder.AddCubicBezier(new Vector2(-5.64300013F, 5.5999999F), new Vector2(-0.451999992F, 8.45400047F), new Vector2(4.19199991F, 3.99399996F));
                    builder.AddCubicBezier(new Vector2(8.75899982F, -0.39199999F), new Vector2(6.52799988F, -5.31699991F), new Vector2(4.21400023F, -7.54099989F));
                    builder.AddCubicBezier(new Vector2(3.74600005F, -7.99100018F), new Vector2(4.52400017F, -8.35099983F), new Vector2(5.03399992F, -7.97100019F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - ShapeGroup: Path Scale:4,4, Offset:<-1. -1>
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.53200006F, -8.20100021F));
                    builder.AddCubicBezier(new Vector2(6.57200003F, -6.8210001F), new Vector2(8.50199986F, -4.27099991F), new Vector2(8.50199986F, -0.740999997F));
                    builder.AddCubicBezier(new Vector2(8.50199986F, 4.22900009F), new Vector2(4.47200012F, 8.25899982F), new Vector2(-0.497999996F, 8.25899982F));
                    builder.AddCubicBezier(new Vector2(-4.05800009F, 8.25899982F), new Vector2(-7.03800011F, 6.14900017F), new Vector2(-8.46800041F, 3.4289999F));
                    builder.AddCubicBezier(new Vector2(-8.76799965F, 2.86899996F), new Vector2(-8.91800022F, 2.47900009F), new Vector2(-9.0880003F, 1.96899998F));
                    builder.AddCubicBezier(new Vector2(-9.84799957F, -0.201000005F), new Vector2(-9.84799957F, -4.70100021F), new Vector2(-6.3579998F, -7.58099985F));
                    builder.AddCubicBezier(new Vector2(-2.86800003F, -10.4510002F), new Vector2(0.871999979F, -9.96100044F), new Vector2(2.93199992F, -9.06099987F));
                    builder.AddCubicBezier(new Vector2(3.51200008F, -8.81099987F), new Vector2(3.73200011F, -8.74100018F), new Vector2(4.53200006F, -8.20100021F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_5()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(0F, 2.5F));
                    builder.AddLine(new Vector2(0F, -2.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_White()
            {
                return _colorBrush_White = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF));
            }

            // Layer aggregator
            // Layer: Path 7
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_1());
                shapes.Add(ContainerShape_2());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: Path 7
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(25.5F, 28.25F);
                // ShapeGroup: Path Scale:4,4
                result.Shapes.Add(SpriteShape_00());
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_0(), RootProgress());
                return result;
            }

            // - Layer aggregator
            // Layer: Path 7
            CompositionContainerShape ContainerShape_2()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(43.5F, 40.25F);
                // ShapeGroup: Path Scale:4,4
                result.Shapes.Add(SpriteShape_01());
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_1(), _rootProgress);
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_3()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(-2.98399997F, -4.00199986F);
                result.Offset = new Vector2(52.9550018F, 54.0249977F);
                // ShapeGroup: Path Scale:4,4, Offset:<-1. -1>
                result.Shapes.Add(SpriteShape_02());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_80(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_2(), _rootProgress);
                return result;
            }

            CompositionPath Path()
            {
                var result = _path = new CompositionPath(Geometry_5());
                return result;
            }

            // - - - Layer aggregator
            // - - Layer: Path 7
            // ShapeGroup: Path Scale:4,4
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_00()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - - - Layer aggregator
            // - - Layer: Path 7
            // ShapeGroup: Path Scale:4,4
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_01()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // - - Layer aggregator
            // ShapeGroup: Path Scale:4,4, Offset:<-1. -1>
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_02()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_0(), _rootProgress);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_03()
            {
                var result = _c.CreatePathGeometry(Path());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", TrimOffsetScalarAnimation_0_to_0p478(), RootProgressRemapped());
                StartProgressBoundAnimation(propertySet, "TStart", TStartScalarAnimation_0_to_0p3(), _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", TEndScalarAnimation_0p01_to_0p18(), _rootProgressRemapped);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_04()
            {
                var result = _c.CreatePathGeometry(_path);
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", _trimOffsetScalarAnimation_0_to_0p478, _rootProgressRemapped);
                StartProgressBoundAnimation(propertySet, "TStart", _tStartScalarAnimation_0_to_0p3, _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", _tEndScalarAnimation_0p01_to_0p18, _rootProgressRemapped);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_05()
            {
                var result = _c.CreatePathGeometry(_path);
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", _trimOffsetScalarAnimation_0_to_0p478, _rootProgressRemapped);
                StartProgressBoundAnimation(propertySet, "TStart", _tStartScalarAnimation_0_to_0p3, _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", _tEndScalarAnimation_0p01_to_0p18, _rootProgressRemapped);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_06()
            {
                var result = _c.CreatePathGeometry(_path);
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", _trimOffsetScalarAnimation_0_to_0p478, _rootProgressRemapped);
                StartProgressBoundAnimation(propertySet, "TStart", _tStartScalarAnimation_0_to_0p3, _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", _tEndScalarAnimation_0p01_to_0p18, _rootProgressRemapped);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_07()
            {
                var result = _c.CreatePathGeometry(_path);
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", _trimOffsetScalarAnimation_0_to_0p478, _rootProgressRemapped);
                StartProgressBoundAnimation(propertySet, "TStart", _tStartScalarAnimation_0_to_0p3, _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", _tEndScalarAnimation_0p01_to_0p18, _rootProgressRemapped);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_08()
            {
                var result = _c.CreatePathGeometry(_path);
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", _trimOffsetScalarAnimation_0_to_0p478, _rootProgressRemapped);
                StartProgressBoundAnimation(propertySet, "TStart", _tStartScalarAnimation_0_to_0p3, _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", _tEndScalarAnimation_0p01_to_0p18, _rootProgressRemapped);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_09()
            {
                var result = _c.CreatePathGeometry(_path);
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", _trimOffsetScalarAnimation_0_to_0p478, _rootProgressRemapped);
                StartProgressBoundAnimation(propertySet, "TStart", _tStartScalarAnimation_0_to_0p3, _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", _tEndScalarAnimation_0p01_to_0p18, _rootProgressRemapped);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_10()
            {
                var result = _c.CreatePathGeometry(_path);
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", _trimOffsetScalarAnimation_0_to_0p478, _rootProgressRemapped);
                StartProgressBoundAnimation(propertySet, "TStart", _tStartScalarAnimation_0_to_0p3, _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", _tEndScalarAnimation_0p01_to_0p18, _rootProgressRemapped);
                return result;
            }

            // - - Layer aggregator
            // - Layer: Path 7
            // Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Scale:<4. 4>
                var result = CreateSpriteShape(PathGeometry_00(), new Matrix3x2(4F, 0F, 0F, 4F, 0F, 0F), ColorBrush_White());
                return result;
            }

            // - - Layer aggregator
            // - Layer: Path 7
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Scale:<4. 4>
                var result = CreateSpriteShape(PathGeometry_01(), new Matrix3x2(4F, 0F, 0F, 4F, 0F, 0F), _colorBrush_White);
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<-1. -1>, Scale:<4. 4>
                var result = CreateSpriteShape(PathGeometry_02(), new Matrix3x2(4F, 0F, 0F, 4F, -1F, -1F), _colorBrush_White);
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<68. 34,5>, Scale:<4. 4>
                var result = CreateSpriteShape(PathGeometry_03(), new Matrix3x2(4F, 0F, 0F, 4F, 68F, 34.5F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                // Offset:<100,625. 68,5>, Rotation:90 degrees, Scale:<4. 4>
                var result = CreateSpriteShape(PathGeometry_04(), new Matrix3x2(0F, 4F, -4F, 0F, 100.625F, 68.5F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                // Offset:<43,688. 44,25>, Rotation:-45,00000581024828 degrees, Scale:<4. 4>
                var result = CreateSpriteShape(PathGeometry_05(), new Matrix3x2(2.82842684F, -2.82842731F, 2.82842731F, 2.82842684F, 43.6879997F, 44.25F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<92,375. 44,125>, Rotation:-134,9999941897517 degrees, Scale:<4. -4>
                var result = CreateSpriteShape(PathGeometry_06(), new Matrix3x2(-2.82842684F, -2.82842731F, -2.82842731F, 2.82842684F, 92.375F, 44.125F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<92,437. 92,956>, Rotation:135,0000038490977 degrees, Scale:<4. 4>
                var result = CreateSpriteShape(PathGeometry_07(), new Matrix3x2(-2.82842731F, 2.82842684F, -2.82842684F, -2.82842731F, 92.4369965F, 92.9560013F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<44,303. 92,581>, Rotation:44,99999615090229 degrees, Scale:<4. -4>
                var result = CreateSpriteShape(PathGeometry_08(), new Matrix3x2(2.82842731F, 2.82842684F, 2.82842684F, -2.82842731F, 44.3030014F, 92.5810013F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<33,625. 68,5>, Rotation:90 degrees, Scale:<4. -4>
                var result = CreateSpriteShape(PathGeometry_09(), new Matrix3x2(0F, 4F, 4F, 0F, 33.625F, 68.5F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<68. 102,75>, Scale:<4. -4>
                var result = CreateSpriteShape(PathGeometry_10(), new Matrix3x2(4F, 0F, 0F, -4F, 68F, 102.75F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // PreComp layer: Sunny
            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.CenterPoint = new Vector3(68F, 68F, 0F);
                result.IsVisible = false;
                result.Offset = new Vector3(-18.375F, -18.375F, 0F);
                // Opacity for layer: Sunny
                result.Children.InsertAtTop(ContainerVisual_1());
                StartProgressBoundAnimation(result, "Opacity", OpacityScalarAnimation_0_to_1(), _rootProgress);
                StartProgressBoundAnimation(result, "IsVisible", IsVisibleBooleanAnimation(), _rootProgress);
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m50_to_0(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale", ScaleVector3Animation(), _rootProgress);
                return result;
            }

            // PreComp layer: Sunny
            // Transforms for Sunny
            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(136F, 136F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_0());
                // PreComp layer: Sunny
                children.InsertAtTop(ContainerVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.606999993F, 0F), new Vector2(0.839999974F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            ExpressionAnimation RootProgressRemapped()
            {
                var result = _rootProgressRemapped = _c.CreateExpressionAnimation("_.Progress*0.9896907");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - PreComp layer: Sunny
            // Opacity for layer: Sunny
            InsetClip InsetClip_0()
            {
                var result = _c.CreateInsetClip();
                return result;
            }

            // - - - Layer aggregator
            // - ShapeGroup: Path Scale:4,4, Offset:<-1. -1>
            // Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                var result = CreatePathKeyFrameAnimation(0F, new CompositionPath(Geometry_2()), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.354166657F, new CompositionPath(Geometry_3()), _c.CreateCubicBezierEasingFunction(new Vector2(0.856999993F, 0F), new Vector2(0.5F, 1F)));
                result.InsertKeyFrame(0.625F, new CompositionPath(Geometry_4()), _c.CreateCubicBezierEasingFunction(new Vector2(0.43900001F, 0F), new Vector2(0.735000014F, 1F)));
                return result;
            }

            // PreComp layer: Sunny
            // Layer opacity animation
            ScalarKeyFrameAnimation OpacityScalarAnimation_0_to_1()
            {
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.5625F, 0F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.729166687F, 1F, _cubicBezierEasingFunction_1);
                return result;
            }

            // - Layer aggregator
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_80()
            {
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.3125F, 0F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.666666687F, 80F, _c.CreateCubicBezierEasingFunction(new Vector2(0.300000012F, 0F), new Vector2(0.400000006F, 1F)));
                return result;
            }

            // PreComp layer: Sunny
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_m50_to_0()
            {
                var result = CreateScalarKeyFrameAnimation(0F, -50F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.520833313F, -50F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(1F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.300000012F, 0F), new Vector2(0.316000015F, 1F)));
                return result;
            }

            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_0p01_to_0p18()
            {
                var result = _tEndScalarAnimation_0p01_to_0p18 = CreateScalarKeyFrameAnimation(0F, 0.00999999978F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.608247399F, 0.00999999978F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.793814421F, 0F, _cubicBezierEasingFunction_1);
                result.InsertKeyFrame(1F, 0.180000007F, _cubicBezierEasingFunction_1);
                return result;
            }

            // TrimOffset
            ScalarKeyFrameAnimation TrimOffsetScalarAnimation_0_to_0p478()
            {
                var result = _trimOffsetScalarAnimation_0_to_0p478 = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.608247399F, 0F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.793814421F, 0.333333343F, CubicBezierEasingFunction_1());
                result.InsertKeyFrame(1F, 0.477777779F, _cubicBezierEasingFunction_1);
                return result;
            }

            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_0_to_0p3()
            {
                var result = _tStartScalarAnimation_0_to_0p3 = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.614583313F, 0F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.802083313F, 0.300000012F, _cubicBezierEasingFunction_1);
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                var shapes = result.Shapes;
                // Layer: Path 7
                shapes.Add(ContainerShape_0());
                shapes.Add(ContainerShape_3());
                return result;
            }

            // - PreComp layer: Sunny
            // Opacity for layer: Sunny
            // Layer aggregator
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(136F, 136F);
                var shapes = result.Shapes;
                // Layer: Path 14
                shapes.Add(SpriteShape_03());
                // Layer: Path 14
                shapes.Add(SpriteShape_04());
                // Layer: Path 14
                shapes.Add(SpriteShape_05());
                // Layer: Path 14
                shapes.Add(SpriteShape_06());
                // Layer: Path 14
                shapes.Add(SpriteShape_07());
                // Layer: Path 14
                shapes.Add(SpriteShape_08());
                // Layer: Path 14
                shapes.Add(SpriteShape_09());
                // Layer: Path 14
                shapes.Add(SpriteShape_10());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - - Layer aggregator
            // - Layer: Path 7
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_0()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                result.InsertKeyFrame(0.125F, new Vector2(1.20000005F, 1.20000005F), CubicBezierEasingFunction_0());
                result.InsertKeyFrame(0.25F, new Vector2(0F, 0F), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.5F, 1F)));
                return result;
            }

            // - - Layer aggregator
            // - Layer: Path 7
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_1()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
                result.InsertKeyFrame(0.0833333358F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.208333328F, new Vector2(1.20000005F, 1.20000005F), _cubicBezierEasingFunction_0);
                result.InsertKeyFrame(0.333333343F, new Vector2(0F, 0F), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.513999999F, 1F)));
                return result;
            }

            // - Layer aggregator
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_2()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.354166657F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.625F, new Vector2(0.600000024F, 0.600000024F), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.699999988F, 1F)));
                result.InsertKeyFrame(1F, new Vector2(0.660000026F, 0.660000026F), _c.CreateCubicBezierEasingFunction(new Vector2(0.300000012F, 0F), new Vector2(0.513999999F, 1F)));
                return result;
            }

            // - Layer aggregator
            // Layer: Path 7
            Vector2KeyFrameAnimation ShapeVisibilityAnimation()
            {
                var result = CreateVector2KeyFrameAnimation(0.333333343F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                return result;
            }

            // PreComp layer: Sunny
            // Scale
            Vector3KeyFrameAnimation ScaleVector3Animation()
            {
                var result = CreateVector3KeyFrameAnimation(0F, new Vector3(1.10000002F, 1.10000002F, 1F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.520833313F, new Vector3(1.10000002F, 1.10000002F, 1F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.75F, new Vector3(1F, 1F, 1F), _c.CreateCubicBezierEasingFunction(new Vector2(0.215000004F, 0F), new Vector2(0.379999995F, 1F)));
                return result;
            }

            internal AnimatedVisual_UAPv11(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(100F, 100F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 11);
            }
        }

        sealed class AnimatedVisual_UAPv7 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 8000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _colorBrush_White;
            CompositionPath _path;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            ExpressionAnimation _rootProgress;
            ExpressionAnimation _rootProgressRemapped;
            ScalarKeyFrameAnimation _tEndScalarAnimation_0p01_to_0p18;
            ScalarKeyFrameAnimation _trimOffsetScalarAnimation_0_to_0p478;
            ScalarKeyFrameAnimation _tStartScalarAnimation_0_to_0p3;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation(float initialProgress, bool initialValue)
            {
                var result = _c.CreateBooleanKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector3KeyFrameAnimation CreateVector3KeyFrameAnimation(float initialProgress, Vector3 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector3KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // PreComp layer: Sunny
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation()
            {
                var result = CreateBooleanKeyFrameAnimation(0.5625F, true);
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - Layer: Path 7
            // - - ShapeGroup: Path Scale:4,4
            // - Path 1.PathGeometry
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2F, 0F));
                    builder.AddCubicBezier(new Vector2(2F, 0.100000001F), new Vector2(1.91999996F, 0.180000007F), new Vector2(1.82000005F, 0.180000007F));
                    builder.AddCubicBezier(new Vector2(0.920000017F, 0.180000007F), new Vector2(0.180000007F, 0.920000017F), new Vector2(0.180000007F, 1.82000005F));
                    builder.AddCubicBezier(new Vector2(0.180000007F, 1.91999996F), new Vector2(0.100000001F, 2F), new Vector2(0F, 2F));
                    builder.AddCubicBezier(new Vector2(-0.100000001F, 2F), new Vector2(-0.180000007F, 1.91999996F), new Vector2(-0.180000007F, 1.82000005F));
                    builder.AddCubicBezier(new Vector2(-0.180000007F, 0.920000017F), new Vector2(-0.920000017F, 0.180000007F), new Vector2(-1.82000005F, 0.180000007F));
                    builder.AddCubicBezier(new Vector2(-1.91999996F, 0.180000007F), new Vector2(-2F, 0.100000001F), new Vector2(-2F, 0F));
                    builder.AddCubicBezier(new Vector2(-2F, -0.100000001F), new Vector2(-1.91999996F, -0.180000007F), new Vector2(-1.82000005F, -0.180000007F));
                    builder.AddCubicBezier(new Vector2(-0.920000017F, -0.180000007F), new Vector2(-0.180000007F, -0.920000017F), new Vector2(-0.180000007F, -1.82000005F));
                    builder.AddCubicBezier(new Vector2(-0.180000007F, -1.91999996F), new Vector2(-0.100000001F, -2F), new Vector2(0F, -2F));
                    builder.AddCubicBezier(new Vector2(0.100000001F, -2F), new Vector2(0.180000007F, -1.91999996F), new Vector2(0.180000007F, -1.82000005F));
                    builder.AddCubicBezier(new Vector2(0.180000007F, -0.920000017F), new Vector2(0.920000017F, -0.180000007F), new Vector2(1.82000005F, -0.180000007F));
                    builder.AddCubicBezier(new Vector2(1.91999996F, -0.180000007F), new Vector2(2F, -0.100000001F), new Vector2(2F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - Layer: Path 7
            // - - ShapeGroup: Path Scale:4,4
            // - Path 1.PathGeometry
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(1.5F, 0F));
                    builder.AddCubicBezier(new Vector2(1.5F, 0.0799999982F), new Vector2(1.44000006F, 0.140000001F), new Vector2(1.36000001F, 0.140000001F));
                    builder.AddCubicBezier(new Vector2(0.689999998F, 0.140000001F), new Vector2(0.140000001F, 0.689999998F), new Vector2(0.140000001F, 1.36000001F));
                    builder.AddCubicBezier(new Vector2(0.140000001F, 1.44000006F), new Vector2(0.0799999982F, 1.5F), new Vector2(0F, 1.5F));
                    builder.AddCubicBezier(new Vector2(-0.0700000003F, 1.5F), new Vector2(-0.140000001F, 1.44000006F), new Vector2(-0.140000001F, 1.36000001F));
                    builder.AddCubicBezier(new Vector2(-0.140000001F, 0.689999998F), new Vector2(-0.689999998F, 0.140000001F), new Vector2(-1.36000001F, 0.140000001F));
                    builder.AddCubicBezier(new Vector2(-1.44000006F, 0.140000001F), new Vector2(-1.5F, 0.0799999982F), new Vector2(-1.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-1.5F, -0.0799999982F), new Vector2(-1.44000006F, -0.140000001F), new Vector2(-1.36000001F, -0.140000001F));
                    builder.AddCubicBezier(new Vector2(-0.689999998F, -0.140000001F), new Vector2(-0.140000001F, -0.689999998F), new Vector2(-0.140000001F, -1.36000001F));
                    builder.AddCubicBezier(new Vector2(-0.140000001F, -1.44000006F), new Vector2(-0.0700000003F, -1.5F), new Vector2(0F, -1.5F));
                    builder.AddCubicBezier(new Vector2(0.0799999982F, -1.5F), new Vector2(0.140000001F, -1.44000006F), new Vector2(0.140000001F, -1.36000001F));
                    builder.AddCubicBezier(new Vector2(0.140000001F, -0.689999998F), new Vector2(0.689999998F, -0.140000001F), new Vector2(1.36000001F, -0.140000001F));
                    builder.AddCubicBezier(new Vector2(1.44000006F, -0.140000001F), new Vector2(1.5F, -0.0799999982F), new Vector2(1.5F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Path Scale:4,4, Offset:<-1. -1>
            // - Path 1.PathGeometry
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.57299995F, -8.19699955F));
                    builder.AddCubicBezier(new Vector2(6.60300016F, -6.80700016F), new Vector2(8.53299999F, -4.2670002F), new Vector2(8.53299999F, -0.736999989F));
                    builder.AddCubicBezier(new Vector2(8.53299999F, 4.24300003F), new Vector2(4.50299978F, 8.26299953F), new Vector2(-0.467000008F, 8.26299953F));
                    builder.AddCubicBezier(new Vector2(-4.02699995F, 8.26299953F), new Vector2(-7.00699997F, 6.16300011F), new Vector2(-8.43700027F, 3.44300008F));
                    builder.AddCubicBezier(new Vector2(-8.72700024F, 2.87299991F), new Vector2(-8.34700012F, 2.48300004F), new Vector2(-7.8670001F, 2.69300008F));
                    builder.AddCubicBezier(new Vector2(-6.70699978F, 3.18300009F), new Vector2(-2.51699996F, 4.45300007F), new Vector2(1.30299997F, 0.97299999F));
                    builder.AddCubicBezier(new Vector2(5.12300014F, -2.50699997F), new Vector2(3.90300012F, -7.34700012F), new Vector2(3.90300012F, -7.77699995F));
                    builder.AddCubicBezier(new Vector2(3.90300012F, -8.20699978F), new Vector2(4.30299997F, -8.37699986F), new Vector2(4.57299995F, -8.19699955F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(0F, 2.5F));
                    builder.AddLine(new Vector2(0F, -2.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_White()
            {
                return _colorBrush_White = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF));
            }

            // Layer aggregator
            // Layer: Path 7
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_1());
                shapes.Add(ContainerShape_2());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: Path 7
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(25.5F, 28.25F);
                // ShapeGroup: Path Scale:4,4
                result.Shapes.Add(SpriteShape_00());
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_0(), RootProgress());
                return result;
            }

            // - Layer aggregator
            // Layer: Path 7
            CompositionContainerShape ContainerShape_2()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(43.5F, 40.25F);
                // ShapeGroup: Path Scale:4,4
                result.Shapes.Add(SpriteShape_01());
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_1(), _rootProgress);
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_3()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(-2.98399997F, -4.00199986F);
                result.Offset = new Vector2(52.9550018F, 54.0249977F);
                // ShapeGroup: Path Scale:4,4, Offset:<-1. -1>
                result.Shapes.Add(SpriteShape_02());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_80(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_2(), _rootProgress);
                return result;
            }

            CompositionPath Path()
            {
                var result = _path = new CompositionPath(Geometry_3());
                return result;
            }

            // - - - Layer aggregator
            // - - Layer: Path 7
            // ShapeGroup: Path Scale:4,4
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_00()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - - - Layer aggregator
            // - - Layer: Path 7
            // ShapeGroup: Path Scale:4,4
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_01()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // - - Layer aggregator
            // ShapeGroup: Path Scale:4,4, Offset:<-1. -1>
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_02()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_03()
            {
                var result = _c.CreatePathGeometry(Path());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", TrimOffsetScalarAnimation_0_to_0p478(), RootProgressRemapped());
                StartProgressBoundAnimation(propertySet, "TStart", TStartScalarAnimation_0_to_0p3(), _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", TEndScalarAnimation_0p01_to_0p18(), _rootProgressRemapped);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_04()
            {
                var result = _c.CreatePathGeometry(_path);
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", _trimOffsetScalarAnimation_0_to_0p478, _rootProgressRemapped);
                StartProgressBoundAnimation(propertySet, "TStart", _tStartScalarAnimation_0_to_0p3, _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", _tEndScalarAnimation_0p01_to_0p18, _rootProgressRemapped);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_05()
            {
                var result = _c.CreatePathGeometry(_path);
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", _trimOffsetScalarAnimation_0_to_0p478, _rootProgressRemapped);
                StartProgressBoundAnimation(propertySet, "TStart", _tStartScalarAnimation_0_to_0p3, _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", _tEndScalarAnimation_0p01_to_0p18, _rootProgressRemapped);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_06()
            {
                var result = _c.CreatePathGeometry(_path);
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", _trimOffsetScalarAnimation_0_to_0p478, _rootProgressRemapped);
                StartProgressBoundAnimation(propertySet, "TStart", _tStartScalarAnimation_0_to_0p3, _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", _tEndScalarAnimation_0p01_to_0p18, _rootProgressRemapped);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_07()
            {
                var result = _c.CreatePathGeometry(_path);
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", _trimOffsetScalarAnimation_0_to_0p478, _rootProgressRemapped);
                StartProgressBoundAnimation(propertySet, "TStart", _tStartScalarAnimation_0_to_0p3, _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", _tEndScalarAnimation_0p01_to_0p18, _rootProgressRemapped);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_08()
            {
                var result = _c.CreatePathGeometry(_path);
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", _trimOffsetScalarAnimation_0_to_0p478, _rootProgressRemapped);
                StartProgressBoundAnimation(propertySet, "TStart", _tStartScalarAnimation_0_to_0p3, _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", _tEndScalarAnimation_0p01_to_0p18, _rootProgressRemapped);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_09()
            {
                var result = _c.CreatePathGeometry(_path);
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", _trimOffsetScalarAnimation_0_to_0p478, _rootProgressRemapped);
                StartProgressBoundAnimation(propertySet, "TStart", _tStartScalarAnimation_0_to_0p3, _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", _tEndScalarAnimation_0p01_to_0p18, _rootProgressRemapped);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_10()
            {
                var result = _c.CreatePathGeometry(_path);
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.00999999978F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TrimOffset", _trimOffsetScalarAnimation_0_to_0p478, _rootProgressRemapped);
                StartProgressBoundAnimation(propertySet, "TStart", _tStartScalarAnimation_0_to_0p3, _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", _tEndScalarAnimation_0p01_to_0p18, _rootProgressRemapped);
                return result;
            }

            // - - Layer aggregator
            // - Layer: Path 7
            // Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Scale:<4. 4>
                var result = CreateSpriteShape(PathGeometry_00(), new Matrix3x2(4F, 0F, 0F, 4F, 0F, 0F), ColorBrush_White());
                return result;
            }

            // - - Layer aggregator
            // - Layer: Path 7
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Scale:<4. 4>
                var result = CreateSpriteShape(PathGeometry_01(), new Matrix3x2(4F, 0F, 0F, 4F, 0F, 0F), _colorBrush_White);
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<-1. -1>, Scale:<4. 4>
                var result = CreateSpriteShape(PathGeometry_02(), new Matrix3x2(4F, 0F, 0F, 4F, -1F, -1F), _colorBrush_White);
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<68. 34,5>, Scale:<4. 4>
                var result = CreateSpriteShape(PathGeometry_03(), new Matrix3x2(4F, 0F, 0F, 4F, 68F, 34.5F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                // Offset:<100,625. 68,5>, Rotation:90 degrees, Scale:<4. 4>
                var result = CreateSpriteShape(PathGeometry_04(), new Matrix3x2(0F, 4F, -4F, 0F, 100.625F, 68.5F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                // Offset:<43,688. 44,25>, Rotation:-45,00000581024828 degrees, Scale:<4. 4>
                var result = CreateSpriteShape(PathGeometry_05(), new Matrix3x2(2.82842684F, -2.82842731F, 2.82842731F, 2.82842684F, 43.6879997F, 44.25F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<92,375. 44,125>, Rotation:-134,9999941897517 degrees, Scale:<4. -4>
                var result = CreateSpriteShape(PathGeometry_06(), new Matrix3x2(-2.82842684F, -2.82842731F, -2.82842731F, 2.82842684F, 92.375F, 44.125F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<92,437. 92,956>, Rotation:135,0000038490977 degrees, Scale:<4. 4>
                var result = CreateSpriteShape(PathGeometry_07(), new Matrix3x2(-2.82842731F, 2.82842684F, -2.82842684F, -2.82842731F, 92.4369965F, 92.9560013F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<44,303. 92,581>, Rotation:44,99999615090229 degrees, Scale:<4. -4>
                var result = CreateSpriteShape(PathGeometry_08(), new Matrix3x2(2.82842731F, 2.82842684F, 2.82842684F, -2.82842731F, 44.3030014F, 92.5810013F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<33,625. 68,5>, Rotation:90 degrees, Scale:<4. -4>
                var result = CreateSpriteShape(PathGeometry_09(), new Matrix3x2(0F, 4F, 4F, 0F, 33.625F, 68.5F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - - PreComp layer: Sunny
            // - Opacity for layer: Sunny
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<68. 102,75>, Scale:<4. -4>
                var result = CreateSpriteShape(PathGeometry_10(), new Matrix3x2(4F, 0F, 0F, -4F, 68F, 102.75F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // PreComp layer: Sunny
            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.CenterPoint = new Vector3(68F, 68F, 0F);
                result.IsVisible = false;
                result.Offset = new Vector3(-18.375F, -18.375F, 0F);
                // Opacity for layer: Sunny
                result.Children.InsertAtTop(ContainerVisual_1());
                StartProgressBoundAnimation(result, "Opacity", OpacityScalarAnimation_0_to_1(), _rootProgress);
                StartProgressBoundAnimation(result, "IsVisible", IsVisibleBooleanAnimation(), _rootProgress);
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m50_to_0(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale", ScaleVector3Animation(), _rootProgress);
                return result;
            }

            // PreComp layer: Sunny
            // Transforms for Sunny
            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(136F, 136F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_0());
                // PreComp layer: Sunny
                children.InsertAtTop(ContainerVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.606999993F, 0F), new Vector2(0.839999974F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            ExpressionAnimation RootProgressRemapped()
            {
                var result = _rootProgressRemapped = _c.CreateExpressionAnimation("_.Progress*0.9896907");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - PreComp layer: Sunny
            // Opacity for layer: Sunny
            InsetClip InsetClip_0()
            {
                var result = _c.CreateInsetClip();
                return result;
            }

            // PreComp layer: Sunny
            // Layer opacity animation
            ScalarKeyFrameAnimation OpacityScalarAnimation_0_to_1()
            {
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.5625F, 0F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.729166687F, 1F, _cubicBezierEasingFunction_1);
                return result;
            }

            // - Layer aggregator
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_80()
            {
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.3125F, 0F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.666666687F, 80F, _c.CreateCubicBezierEasingFunction(new Vector2(0.300000012F, 0F), new Vector2(0.400000006F, 1F)));
                return result;
            }

            // PreComp layer: Sunny
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_m50_to_0()
            {
                var result = CreateScalarKeyFrameAnimation(0F, -50F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.520833313F, -50F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(1F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.300000012F, 0F), new Vector2(0.316000015F, 1F)));
                return result;
            }

            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_0p01_to_0p18()
            {
                var result = _tEndScalarAnimation_0p01_to_0p18 = CreateScalarKeyFrameAnimation(0F, 0.00999999978F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.608247399F, 0.00999999978F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.793814421F, 0F, _cubicBezierEasingFunction_1);
                result.InsertKeyFrame(1F, 0.180000007F, _cubicBezierEasingFunction_1);
                return result;
            }

            // TrimOffset
            ScalarKeyFrameAnimation TrimOffsetScalarAnimation_0_to_0p478()
            {
                var result = _trimOffsetScalarAnimation_0_to_0p478 = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.608247399F, 0F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.793814421F, 0.333333343F, CubicBezierEasingFunction_1());
                result.InsertKeyFrame(1F, 0.477777779F, _cubicBezierEasingFunction_1);
                return result;
            }

            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_0_to_0p3()
            {
                var result = _tStartScalarAnimation_0_to_0p3 = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.614583313F, 0F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.802083313F, 0.300000012F, _cubicBezierEasingFunction_1);
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                var shapes = result.Shapes;
                // Layer: Path 7
                shapes.Add(ContainerShape_0());
                shapes.Add(ContainerShape_3());
                return result;
            }

            // - PreComp layer: Sunny
            // Opacity for layer: Sunny
            // Layer aggregator
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(136F, 136F);
                var shapes = result.Shapes;
                // Layer: Path 14
                shapes.Add(SpriteShape_03());
                // Layer: Path 14
                shapes.Add(SpriteShape_04());
                // Layer: Path 14
                shapes.Add(SpriteShape_05());
                // Layer: Path 14
                shapes.Add(SpriteShape_06());
                // Layer: Path 14
                shapes.Add(SpriteShape_07());
                // Layer: Path 14
                shapes.Add(SpriteShape_08());
                // Layer: Path 14
                shapes.Add(SpriteShape_09());
                // Layer: Path 14
                shapes.Add(SpriteShape_10());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - - Layer aggregator
            // - Layer: Path 7
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_0()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                result.InsertKeyFrame(0.125F, new Vector2(1.20000005F, 1.20000005F), CubicBezierEasingFunction_0());
                result.InsertKeyFrame(0.25F, new Vector2(0F, 0F), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.5F, 1F)));
                return result;
            }

            // - - Layer aggregator
            // - Layer: Path 7
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_1()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
                result.InsertKeyFrame(0.0833333358F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.208333328F, new Vector2(1.20000005F, 1.20000005F), _cubicBezierEasingFunction_0);
                result.InsertKeyFrame(0.333333343F, new Vector2(0F, 0F), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.513999999F, 1F)));
                return result;
            }

            // - Layer aggregator
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_2()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.354166657F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.625F, new Vector2(0.600000024F, 0.600000024F), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.699999988F, 1F)));
                result.InsertKeyFrame(1F, new Vector2(0.660000026F, 0.660000026F), _c.CreateCubicBezierEasingFunction(new Vector2(0.300000012F, 0F), new Vector2(0.513999999F, 1F)));
                return result;
            }

            // - Layer aggregator
            // Layer: Path 7
            Vector2KeyFrameAnimation ShapeVisibilityAnimation()
            {
                var result = CreateVector2KeyFrameAnimation(0.333333343F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                return result;
            }

            // PreComp layer: Sunny
            // Scale
            Vector3KeyFrameAnimation ScaleVector3Animation()
            {
                var result = CreateVector3KeyFrameAnimation(0F, new Vector3(1.10000002F, 1.10000002F, 1F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.520833313F, new Vector3(1.10000002F, 1.10000002F, 1F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.75F, new Vector3(1F, 1F, 1F), _c.CreateCubicBezierEasingFunction(new Vector2(0.215000004F, 0F), new Vector2(0.379999995F, 1F)));
                return result;
            }

            internal AnimatedVisual_UAPv7(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(100F, 100F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
